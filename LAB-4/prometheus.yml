global:
  scrape_interval:     5s # Set the scrape interval every 2 seconds. The default is every 1 minute.
  #evaluation_interval: 2s # Evaluate rules every 2 seconds. The default is every 1 minute.
  # scrape_timeout is set to the global default (10s).
  external_labels:
    server_name: prometheus01
    site: prod
    


# Alertmanager configuration
#alerting:
#  alertmanagers:
#  - static_configs:
#    - targets: ['localhost:9093']

# Load rules once and periodically evaluate them according to the global 'evaluation_interval'.
#rule_files:
#   - "alert_rules.yml" # add alerting rules

# A scrape configuration containing exactly one endpoint to scrape:
# Here it's Prometheus itself.
scrape_configs:
  # The job name is added as a label `job=<job_name>` to any time series scraped from this config.
  - job_name: "prometheus"
    static_configs:
    - targets: ['localhost:9090']
  
  - job_name: "node_exporter"
    scrape_interval: 5s
    static_configs:
    - targets: ['172.23.32.1:9100']

  - job_name: 'blackbox-http_2xx-general'
    scrape_interval: 5s
    metrics_path: /probe
    params:
      module: [http_2xx-general] # наш модуль из blackbox.yml
    static_configs:
    - targets:
        - https://172.23.32.1 # что мониторим
    relabel_configs:
    - source_labels: [__address__]
      target_label: __param_target
    - source_labels: [__param_target]
      target_label: instance
    - target_label: __address__
      replacement: 172.23.32.1:9115 # адрес сервиса blackbox

  - job_name: MySQL
    static_configs:
      - targets: ['172.23.32.1:9104']

  - job_name: "nginx-prometheus-exporter"
    static_configs:
      - targets: ["172.23.32.1:9113"]

remote_write:
  - url: http://172.23.32.1:8428/api/v1/write
    queue_config:
      max_samples_per_send: 10000
      capacity: 20000
      max_shards: 30

rule_files:
  - 'alert.rules'

alerting:
  alertmanagers:
  - scheme: http
    static_configs:
    - targets:
      - "alertmanager:9093"